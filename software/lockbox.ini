# Copyright 2019-2020 Google Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS-IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# Copy (or link) this file to ~/.authboxrc and make edits for your system.

# Pins are physical (40-pin-header) numbers.
# To pass arguments to the hardware layer, separate with colons.
# To put multiple hardware on one action, just separate them with commas.
#
# Available hardware include
#  Button:in_pin:out_pin
#  Buzzer:out_pin
#  Relay:{ActiveHigh/ActiveLow}:out_pin
#  HIDKeystrokingReader:name
#

[pins]
badge_reader = HIDKeystrokingReader:RFIDeas USB Keyboard
# Hardware GPIO where relay is attached.
output_relay = Relay:ActiveHigh:29

[auth]
# EDIT ME!
# Unused names are just available in the template language for interpolation below.
tool = LaserCutter1
location = Sharktown

# Requires uncommenting the server area below.
api_key = 1234
base_url=http://example.com
# /EDIT ME

# These values can use simple time formats like '1m30s' or '2h'.  Their names
# are used in lockbox.py
duration = 1s

# As written, this logs to a local file and checks against a file called
# authorized.txt.  This is for demo only, you probably want to write a samll
# server that checks against your members/training.
command = bash sample_auth_check.sh {} {tool} {duration}
# If you wanted to communicate with a server, the easiest way is to call curl,
# remembering the '-f' flag to make non-200's affect exit status.  This example
# uses our simple HTTP-based protocol, which is intended to be generic enough
# to implement as a plugin for Wordpress/ColdFusion/IIS -- whatever your
# existing system is using.
#
# base_args=api_key={api_key}&tool={tool}&location={location}
# command = curl -f {base_url}/api/v1/check?{base_args}&badge_id={}&state=initial&auth_minutes={duration}
